[{"/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/index.js":"1","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/App.js":"2","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/reportWebVitals.js":"3","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/router/index.js":"4","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/containers/Home/index.js":"5","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/components/QuestionForm/index.js":"6","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/components/AnswerForm/index.js":"7","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/components/ResponseForm/index.js":"8","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/functions/HelmetMetaData/index.js":"9"},{"size":500,"mtime":1606784165120,"results":"10","hashOfConfig":"11"},{"size":185,"mtime":1606886789200,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606784165122,"results":"13","hashOfConfig":"11"},{"size":503,"mtime":1606880871901,"results":"14","hashOfConfig":"11"},{"size":28821,"mtime":1607583784422,"results":"15","hashOfConfig":"11"},{"size":3964,"mtime":1607324759467,"results":"16","hashOfConfig":"11"},{"size":4631,"mtime":1607324753373,"results":"17","hashOfConfig":"11"},{"size":3316,"mtime":1607324746483,"results":"18","hashOfConfig":"11"},{"size":2362,"mtime":1607410829581,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"154jnnu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/index.js",[],["44","45"],"/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/App.js",[],"/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/reportWebVitals.js",[],"/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/router/index.js",[],"/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/containers/Home/index.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61"],"/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/components/QuestionForm/index.js",["62"],"import React from \"react\";\nimport FadeIn from 'react-fade-in';\nimport './styles.css';\n\nimport AOLogo from '../../assets/images/AOLogo.jpg';\n\nvar angle = 0;\n\nconst QuestionForm = (props) => {\n\n    let { backgroundStyles, score, currentPage, backgroundImageUrl, rotationImageUrl, foregroundImageUrl, questionText, questionType,\n        originalPosition, rotationDegrees, correctAnswer, showCorrectAnswer, showWrongAnswer, setLastPosition } = props;\n\n\n    return (\n        <React.Fragment>\n            <div className={backgroundStyles}>\n            </div>\n            <div className=\"MainDivStyles\">\n                <div className=\"ScoreDivStyles\">\n                    <p className=\"ScoreTextStyles\">SCORE: {score}/{currentPage + 1}</p>\n                </div>\n                <div className=\"OALogoDivStyles\">\n                    <img src={AOLogo} alt=\"AOLogo\" />\n                </div>\n                <FadeIn delay={50} transitionDuration={800}>\n                    <div className=\"ImageDivStyles\">\n                        <div className=\"ImageBoxStyles\">\n                            <img className=\"ImageBackgroundStyles\" src={backgroundImageUrl} alt={`Background_Q${currentPage}`} />\n                            {(questionType === \"Degrees\") &&\n                                <img id=\"rotationImageUrl\" className=\"ImageRotateStyles\" src={rotationImageUrl} alt={`Rotate_Q${currentPage}`} onLoad={() => setInitialPosition(originalPosition)} />\n                            }\n                            {(foregroundImageUrl != \"\") &&\n                                <img className=\"ImageForegroundStyles\" src={foregroundImageUrl} alt={`Foreground_Q${currentPage}`} />\n                            }\n                        </div>\n                    </div>\n                </FadeIn>\n                <div className=\"QuestionDivStyles\">{questionText}</div>\n                {(questionType === \"YesOrNo\") &&\n                    <div className=\"AnswerOptionsStyles\">\n                        <div className=\"AnswerButtonStyles Yes\" onClick={(correctAnswer === \"Yes\") ? showCorrectAnswer : showWrongAnswer}>\n                            <span>Yes</span>\n                        </div>\n                        <div className=\"AnswerButtonStyles No\" onClick={(correctAnswer === \"No\") ? showCorrectAnswer : showWrongAnswer}>\n                            <span>No</span>\n                        </div>\n                    </div>\n                }\n                {(questionType === \"Degrees\") &&\n                    <div className=\"AnswerOptionsStyles\">\n                        <div className=\"AnswerButtonStyles Yes\" onClick={() => rotateImageLeft(rotationDegrees, setLastPosition)}>\n                            <span>Left</span>\n                        </div>\n                        <div className=\"AnswerButtonStyles No\" onClick={() => rotateImageRight(rotationDegrees, setLastPosition)}>\n                            <span>Right</span>\n                        </div>\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    )\n}\n\n\nexport function setInitialPosition(originalPosition) {\n    debugger;\n    console.log(\"originalPosition \", originalPosition);\n    angle = originalPosition;\n    var img = document.getElementById('rotationImageUrl');\n    img.style.transform = `rotate(${angle}deg)`;\n    console.log(\"angle \", angle);\n}\n\n\nexport function rotateImageLeft(rotationDegrees, setLastPosition) {\n    angle = angle - rotationDegrees;\n    var img = document.getElementById('rotationImageUrl');\n\n    img.style.transform = `rotate(${angle}deg)`;\n    console.log(\"current angle: \", angle);\n\n    setLastPosition(angle);\n}\n\nexport function rotateImageRight(rotationDegrees, setLastPosition) {\n    angle = angle + rotationDegrees;\n    var img = document.getElementById('rotationImageUrl');\n\n    img.style.transform = `rotate(${angle}deg)`;\n    console.log(\"current angle: \", angle);\n\n    setLastPosition(angle);\n}\n\nexport default QuestionForm;","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/components/AnswerForm/index.js",["63"],"import React from \"react\";\nimport './styles.css';\n\nimport AOLogo from '../../assets/images/AOLogo.jpg';\n\nconst AnswerForm = (props) => {\n\n    let { backgroundStyles, score, currentPage, backgroundImageUrl, rotationImageUrl, foregroundImageUrl, dottedImageUrl, questionText, questionType, correctAnswer, isCorrectAnswered } = props;\n\n    return (\n        <React.Fragment>\n            <div className={backgroundStyles}>\n            </div>\n            <div className=\"MainDivStyles\">\n                <div className=\"ScoreDivStyles\">\n                    <p className=\"ScoreTextStyles\">SCORE: {score}/{currentPage + 1}</p>\n                </div>\n                <div className=\"OALogoDivStyles\">\n                    <img src={AOLogo} alt=\"AOLogo\" />\n                </div>\n                <div className=\"ImageDivStyles\">\n                    <div className=\"ImageBoxStyles\">\n                        <img className=\"ImageBackgroundStyles\" src={backgroundImageUrl} alt={`Background_Q${currentPage}`} />\n                        {(questionType === \"YesOrNo\") &&\n                            <img className=\"ImageDottedStyles\" src={dottedImageUrl} alt={`Dotted_Q${currentPage}`} />\n                        }\n                        {(questionType === \"Degrees\") &&\n                            <React.Fragment>\n                                <img className=\"ImageDottedStyles\" src={dottedImageUrl} alt={`Dotted_Q${currentPage}`} />\n                                <img className=\"ImageRotateStyles RotateAdjustment\" src={rotationImageUrl} alt={`Rotate_Q${currentPage}`} />\n                            </React.Fragment>\n                        }\n                        {(foregroundImageUrl != \"\") &&\n                            <img className=\"ImageForegroundStyles ForegroundAdjustment\" src={foregroundImageUrl} alt={`Foreground_Q${currentPage}`} />\n                        }\n                    </div>\n                </div>\n                <div className=\"QuestionDivStyles\">{questionText}</div>\n                {(questionType === \"YesOrNo\") &&\n                    <div className=\"AnswerOptionsStyles\">\n                        {(isCorrectAnswered)\n                            ?\n                            <React.Fragment>\n                                <div className={`AnswerButtonStyles Yes ${(correctAnswer === \"Yes\") ? \"Green\" : \"\"}`}>\n                                    <span>Yes</span>\n                                </div>\n                                <div className={`AnswerButtonStyles No ${(correctAnswer === \"No\") ? \"Green\" : \"\"}`}>\n                                    <span>No</span>\n                                </div>\n                            </React.Fragment>\n                            :\n                            <React.Fragment>\n                                {(document.getElementById(\"countdown\").textContent === \"0\")\n                                    ?\n                                    <React.Fragment>\n                                        <p className={`AnswerButtonStyles Yes`}>\n                                            <span>Yes</span>\n                                        </p>\n                                        <p className={`AnswerButtonStyles No`}>\n                                            <span>No</span>\n                                        </p>\n                                    </React.Fragment>\n                                    :\n                                    <React.Fragment>\n                                        <p className={`AnswerButtonStyles Yes ${(correctAnswer === \"Yes\") ? \"\" : \"Red\"}`}>\n                                            <span>Yes</span>\n                                        </p>\n                                        <p className={`AnswerButtonStyles No ${(correctAnswer === \"No\") ? \"\" : \"Red\"}`}>\n                                            <span>No</span>\n                                        </p>\n                                    </React.Fragment>\n                                }\n                            </React.Fragment>\n                        }\n                    </div>\n                }\n                {(questionType === \"Degrees\") &&\n                    <div className=\"AnswerOptionsStyles\">\n                        <div className=\"AnswerButtonStyles Yes\">\n                            <span>Left</span>\n                        </div>\n                        <div className=\"AnswerButtonStyles No\">\n                            <span>Right</span>\n                        </div>\n                    </div>\n                }\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default AnswerForm;","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/components/ResponseForm/index.js",["64"],"import React from \"react\";\nimport FadeIn from 'react-fade-in';\nimport './styles.css';\n\nimport Explosion from '../../assets/images/explosion.png';\nimport AOLogo from '../../assets/images/AOLogo.jpg';\n\nconst ResponseForm = (props) => {\n\n    let { backgroundStyles, score, currentPage, backgroundImageUrl, rotationImageUrl, foregroundImageUrl, dottedImageUrl, questionType, isCorrectAnswered, getNextPage } = props;\n\n    return (\n        <React.Fragment>\n            <div className={`${backgroundStyles} ${(isCorrectAnswered) ? \"Confetti\" : \"\"}`}>\n            </div>\n            <div className=\"MainDivStyles\">\n                <div className=\"ScoreDivStyles\">\n                    <p className=\"ScoreTextStyles\">SCORE: {score}/{currentPage + 1}</p>\n                </div>\n                <div className=\"OALogoDivStyles\">\n                    <img src={AOLogo} alt=\"AOLogo\" />\n                </div>\n                {(isCorrectAnswered)\n                    ?\n                    <React.Fragment>\n                        <div className=\"ImageDivStyles\">\n                            <div className=\"ImageBoxStyles\">\n                                <img className=\"ImageBackgroundStyles\" src={backgroundImageUrl} alt={`Background_Q${currentPage}`} />\n                                {(questionType === \"YesOrNo\") &&\n                                    <img className=\"ImageDottedStyles\" src={dottedImageUrl} alt={`Dotted_Q${currentPage}`} />\n                                }\n                                {(questionType === \"Degrees\") &&\n                                    <React.Fragment>\n                                        <img className=\"ImageDottedStyles\" src={dottedImageUrl} alt={`Dotted_Q${currentPage}`} />\n                                        <img className=\"ImageRotateStyles RotateAdjustment\" src={rotationImageUrl} alt={`Rotate_Q${currentPage}`} />\n                                    </React.Fragment>\n                                }\n                                {(foregroundImageUrl != \"\") &&\n                                    <img className=\"ImageForegroundStyles ForegroundAdjustment\" src={foregroundImageUrl} alt={`Foreground_Q${currentPage}`} />\n                                }\n                            </div>\n                        </div>\n                        <div className=\"QuestionDivStyles\">Great job!</div>\n                    </React.Fragment>\n                    :\n                    <React.Fragment>\n                        <FadeIn delay={50} transitionDuration={800}>\n                            <div className=\"ImageDivStyles\">\n                                <div className=\"ImageBoxStyles\">\n                                    <img className=\"ImageBackgroundStyles\" src={Explosion} alt={`Background_Q${currentPage}`} />\n                                </div>\n                            </div>\n                        </FadeIn>\n                        <div className=\"QuestionDivStyles\">Incorrect...\"</div>\n                    </React.Fragment>\n                }\n                <div className=\"HomeButtonDivStyles\">\n                    <p className=\"HomeButtonStyles\" onClick={getNextPage}>\n                        <span>Next</span>\n                    </p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default ResponseForm;","/Users/freddy/Documents/code/KALEIDOSCOPE/IsItStraight/IsItStraight-frontend/src/functions/HelmetMetaData/index.js",["65"],"import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function HelmetMetaData(props) {\n\n    let location = useLocation();\n    let currentUrl = \"http://www.thestraighteningtest.com\";// + location.pathname;\n    let quote = props.quote !== undefined ? props.quote : \"\";\n    let title = props.title !== undefined ? props.title : \"Can you ace this test?\";\n    let image = props.image !== undefined ? props.image : \"https://llandscapes-10674.kxcdn.com/wp-content/uploads/2019/07/lighting.jpg\";\n    let description = props.description !== undefined ? props.description : \"thestraighteningtest\";\n    let hashtag = props.hashtag !== undefined ? props.hashtag : \"#thestraighteningtest\";\n\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta charset=\"utf-8\" />\n            <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n            <meta name=\"csrf_token\" content=\"\" />\n            <meta property=\"type\" content=\"website\" />\n            <meta property=\"url\" content={currentUrl} />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n            <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\n            <meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\" />\n            <meta name=\"theme-color\" content=\"#ffffff\" />\n            <meta name=\"_token\" content=\"\" />\n            <meta name=\"robots\" content=\"noodp\" />\n            <meta property=\"title\" content={title} />\n            <meta property=\"quote\" content={quote} />\n            <meta name=\"description\" content={description} />\n            <meta property=\"image\" content={image} />\n            <meta property=\"og:locale\" content=\"en_US\" />\n            <meta property=\"og:type\" content=\"website\" />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:quote\" content={quote} />\n            <meta property=\"og:hashtag\" content={hashtag} />\n            <meta property=\"og:image\" content={image} />\n            <meta content=\"image/*\" property=\"og:image:type\" />\n            <meta property=\"og:url\" content={currentUrl} />\n            <meta property=\"og:site_name\" content=\"thestraighteningtest\" />\n            <meta property=\"og:description\" content={description} />\n        </Helmet>\n    );\n}",["66","67"],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":10,"nodeType":"74","messageId":"75","endLine":2,"endColumn":18},{"ruleId":"72","severity":1,"message":"76","line":69,"column":8,"nodeType":"74","messageId":"75","endLine":69,"endColumn":17},{"ruleId":"72","severity":1,"message":"77","line":70,"column":8,"nodeType":"74","messageId":"75","endLine":70,"endColumn":16},{"ruleId":"72","severity":1,"message":"78","line":346,"column":28,"nodeType":"74","messageId":"75","endLine":346,"endColumn":33},{"ruleId":"79","severity":1,"message":"80","line":370,"column":17,"nodeType":"81","messageId":"82","endLine":370,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":374,"column":17,"nodeType":"81","messageId":"82","endLine":374,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":378,"column":17,"nodeType":"81","messageId":"82","endLine":378,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":382,"column":17,"nodeType":"81","messageId":"82","endLine":382,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":386,"column":17,"nodeType":"81","messageId":"82","endLine":386,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":390,"column":17,"nodeType":"81","messageId":"82","endLine":390,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":394,"column":17,"nodeType":"81","messageId":"82","endLine":394,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":398,"column":17,"nodeType":"81","messageId":"82","endLine":398,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":402,"column":17,"nodeType":"81","messageId":"82","endLine":402,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":406,"column":17,"nodeType":"81","messageId":"82","endLine":406,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":410,"column":17,"nodeType":"81","messageId":"82","endLine":410,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":413,"column":17,"nodeType":"81","messageId":"82","endLine":413,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":33,"column":50,"nodeType":"85","messageId":"86","endLine":33,"endColumn":52},{"ruleId":"83","severity":1,"message":"84","line":33,"column":46,"nodeType":"85","messageId":"86","endLine":33,"endColumn":48},{"ruleId":"83","severity":1,"message":"84","line":38,"column":54,"nodeType":"85","messageId":"86","endLine":38,"endColumn":56},{"ruleId":"72","severity":1,"message":"87","line":7,"column":9,"nodeType":"74","messageId":"75","endLine":7,"endColumn":17},{"ruleId":"68","replacedBy":"88"},{"ruleId":"70","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Explosion' is defined but never used.","'Confetti' is defined but never used.","'score' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'location' is assigned a value but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation"]